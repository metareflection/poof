% ThingLab https://github.com/cdglabs/thinglab

% 1979 https://constraints.cs.washington.edu/ui/thinglab-tr.pdf

% TODO: trace prototypes back to earlier Actor systems???
%
% Bobrow, Daniel G., and Winograd. Terry, "An Overview of KRL, A Knowledge Representation Language". Cognitive Science, V. 1, No. 1, 1977.
%
% Hewitt, Carl, Viewing Control Structures as Patterns of Passing Messages, MIT AI Lab Memo 410, Dec 1976.

% Adding POP to Nixpkgs:
% https://github.com/NixOS/rfcs/pull/91/
% https://github.com/NixOS/nixpkgs/pull/116275

% Gilad Bracha's Newspeak? It's class-based only, though.

% C2 wiki?
% https://wiki.c2.com/?PrototypeBasedProgramming
% https://wiki.c2.com/?ClassesPrototypesComparison
% https://wiki.c2.com/?PrototypeBasedLanguage
% "Popular" Prototype language: NewtonScript, LambdaMOO, Io, REBOL, Lua...

@Misc{Strachey67,
  Author = {Christopher Strachey},
  Title = {Fundamental Concepts in Programming Languages},
  Year = {1967},
  %url = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.332.3161},
}

% 10.1145/1024273.1024278
@InProceedings{Kahn1976,
  author = {Kahn, Kenneth Michael},
  title = {An Actor-Based Computer Animation Language},
  year = {1976},
  isbn = {9781450377898},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/1024273.1024278},
  doi = {10.1145/1024273.1024278},
  abstract = {This paper describes a computer language based upon actor semantics designed especially for computer graphics and animation. The thesis that animation is best facilitated by considering each entity on the display screen as an independent process is discussed and demonstrated by examples. The system is built upon MacLisp and is compatible with Lisp-Logo. The language is designed to be used by both very sophisticated programmers and by school children.},
  booktitle = {Proceedings of the ACM/SIGGRAPH Workshop on User-Oriented Design of Interactive Graphics Systems},
  pages = {37–43},
  numpages = {7},
  location = {Pittsburgh, PA},
  series = {UODIGS '76},
  url2 = {https://dspace.mit.edu/handle/1721.1/41950},
}

@InProceedings{Borning1977,
  author = {Alan Hamilton Borning},
  title = {{ThingLab} --- an Object-Oriented System for Building Simulations using Constraints},
  booktitle={5th International Conference on Artificial Intelligence},
  pages={497--498},
  month = {August},
  year = {1977},
  %url = {https://www.ijcai.org/Proceedings/77-1/Papers/085.pdf}
}

@PhDThesis{Borning1979,
  author = {Borning, Alan Hamilton},
  title = {{ThingLab} --- A Constraint-Oriented Simulation Laboratory},
  biburl = {https://www.bibsonomy.org/bibtex/263cae088243a5fd341d7d634d8176bb3/n770},
  publisher = {Palo Alto Research Center XEROX},
  %url = {https://constraints.cs.washington.edu/ui/thinglab-tr.pdf},
  school = {Stanford University},
  year = 1979
}

@PhDThesis{Kahn1979,
  title = {Creation of computer animation from story descriptions},
  author = {Kahn, Kenneth Michael},
  school = {MIT},
  year = {1979},
  %url = {https://dspace.mit.edu/handle/1721.1/16012}
}

% http://worrydream.com/refs/Borning%20-%20The%20Programming%20Language%20Aspects%20of%20ThingLab.pdf
% https://dl.acm.org/doi/abs/10.1145/357146.357147
@article{Borning1981,
  author = {Borning, Alan Hamilton},
  title = {The Programming Language Aspects of ThingLab, a Constraint-Oriented Simulation Laboratory},
  year = {1981},
  issue_date = {Oct. 1981},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {3},
  number = {4},
  issn = {0164-0925},
  url = {https://doi.org/10.1145/357146.357147},
  doi = {10.1145/357146.357147},
  journal = {ACM Trans. Program. Lang. Syst.},
  month = oct,
  pages = {353--387},
  numpages = {35}
}

% Norman I. Adams, IV -- but the IV doesn't get processed correctly
@InProceedings{Rees82t:a,
  author = {Jonathan A. Rees and Norman I. Adams},
  title = {T: a dialect of LISP or, Lambda: the ultimate software tool},
  booktitle = {Symposium on Lisp and Functional Programming, ACM},
  pages = {114--122},
  year = {1982}
}

@Misc{Cannon82,
  title={Flavors: A non-hierarchical approach to object-oriented programming},
  author={Howard Cannon},
  publisher={Symbolics Inc.},
  year={1982}
}

% https://homepages.cwi.nl/~storm/teaching/reader/Lieberman86.pdf
@InProceedings{Lieberman1986,
  title={Using Prototypical Objects to Implement Shared Behavior in Object-Oriented Systems},
  author={Henry Lieberman},
  booktitle={OOPLSA},
  pages={214--223},
  year={1986},
}

@InProceedings{Borning1986,
  title={Classes Versus Prototypes in Object-Oriented Languages},
  author={Alan Hamilton Borning},
  booktitle={1986 Fall Joint Computer Conference},
  pages={36--40},
  year={1986},
}

% Also a 1985 report
@Article{bobrow86commonloops,
  title={CommonLoops: Merging Lisp and Object-Oriented Programming},
  author={Daniel G. Bobrow and Kenneth Kahn and Gregor Kiczales and Larry Masinter and Mark Stefyk and Frank Zdybel},
  journal={OOPSLA},
  year={1986}
}

@Article{bobrow88clos,
  title={Common Lisp Object Specification X3J13},
  author={D. G. Bobrow and L. D. DeMichiel and R. P. Gabriel and S. E. Kleene and G. Kiczales and D. A. Moon},
  journal={SIGPLAN Notices 23 (Special Issue)},
  year={1988}
}

@InProceedings{Kamin1988,
  title={Inheritance in smalltalk-80: a denotational definition},
  author={Samuel N. Kamin},
  booktitle={POPL '88},
  year={1988}
}

% https://core.ac.uk/download/pdf/42828491.pdf
@InProceedings{ObjectsAsClosures,
  author = {Reddy, Uday},
  title = {Objects as Closures - Abstract Semantics of Object Oriented Languages},
  booktitle = {ACM Symposium on LISP and Functional Programming},
  %month = {02},
  pages = {289–-297},
  doi = {10.1145/62678.62721},
  year = {1988},
}

@InProceedings{adams88oopscheme,
  Author = {Norman Adams and Jonathan Rees},
  Title = {Object-Oriented Programming in Scheme},
  %url = "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.954",
  booktitle = {ACM Conference on Lisp and Functional Programming},
  pages = {277--288},
  Year = {1988}
}

@InProceedings{chambers1989efficient,
  author = {Chambers, C. and Ungar, D. and Lee, E.},
  title = {An Efficient Implementation of SELF a Dynamically-Typed Object-Oriented Language Based on Prototypes},
  year = {1989},
  isbn = {0897913337},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  %url = {https://doi.org/10.1145/74877.74884},
  doi = {10.1145/74877.74884},
  abstract = {We have developed and implemented techniques that double the performance of dynamically-typed object-oriented languages. Our SELF implementation runs twice as fast as the fastest Smalltalk implementation, despite SELF's lack of classes and explicit variables.To compensate for the absence of classes, our system uses implementation-level maps to transparently group objects cloned from the same prototype, providing data type information and eliminating the apparent space overhead for prototype-based systems. To compensate for dynamic typing, user-defined control structures, and the lack of explicit variables, our system dynamically compiles multiple versions of a source method, each customized according to its receiver's map. Within each version the type of the receiver is fixed, and thus the compiler can statically bind and inline all messages sent to self. Message splitting and type prediction extract and preserve even more static type information, allowing the compiler to inline many other messages. Inlining dramatically improves performance and eliminates the need to hard-wire low-level methods such as +,==, and ifTrue:.Despite inlining and other optimizations, our system still supports interactive programming environments. The system traverses internal dependency lists to invalidate all compiled methods affected by a programming change. The debugger reconstructs inlined stack frames from compiler-generated debugging information, making inlining invisible to the SELF programmer.},
  booktitle = {Conference Proceedings on Object-Oriented Programming Systems, Languages and Applications},
  pages = {49–70},
  numpages = {22},
  location = {New Orleans, Louisiana, USA},
  series = {OOPSLA '89}
}

@PhDThesis{Cook1989,
    author = {William R. Cook},
    title = {A Denotational Semantics of Inheritance},
    school = {Brown University},
    year = {1989},
    %url = {https://www.cs.utexas.edu/~wcook/papers/thesis/cook89.pdf}
}

% Not obviously worth citing in this context?
% @TechReport ?
@Misc{Lawall89SelfInScheme,
  Author = {Julia L. Lawall and Daniel P. Friedman},
  Title = {Embedding the Self Language in Scheme},
  %url = "https://legacy.cs.indiana.edu/ftp/techreports/TR276.pdf",
  Year = {1989}
}

@InProceedings{bracha1990mixin,
  author = {Bracha, Gilad and Cook, William},
  title = {Mixin-Based Inheritance},
  year = {1990},
  isbn = {0897914112},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  %url = {https://doi.org/10.1145/97945.97982},
  doi = {10.1145/97945.97982},
  abstract = {The diverse inheritance mechanisms provided by Smalltalk, Beta, and CLOS are interpreted as different uses of a single underlying construct. Smalltalk and Beta differ primarily in the direction of class hierarchy growth. These inheritance mechanisms are subsumed in a new inheritance model based on composition of mixins, or abstract subclasses. This form of inheritance can also encode a CLOS multiple-inheritance hierarchy, although changes to the encoded hierarchy that would violate encapsulation are difficult. Practical application of mixin-based inheritance is illustrated in a sketch of an extension to Modula-3.},
  booktitle = {Proceedings of the European Conference on Object-Oriented Programming on Object-Oriented Programming Systems, Languages, and Applications},
  pages = {303–311},
  numpages = {9},
  location = {Ottawa, Canada},
  series = {OOPSLA/ECOOP '90}
}

@article{10.1145/97946.97982,
  author = {Bracha, Gilad and Cook, William},
  title = {Mixin-Based Inheritance},
  year = {1990},
  issue_date = {Oct. 1990},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  volume = {25},
  number = {10},
  issn = {0362-1340},
  %url = {https://doi.org/10.1145/97946.97982},
  doi = {10.1145/97946.97982},
  abstract = {The diverse inheritance mechanisms provided by Smalltalk, Beta, and CLOS are interpreted as different uses of a single underlying construct. Smalltalk and Beta differ primarily in the direction of class hierarchy growth. These inheritance mechanisms are subsumed in a new inheritance model based on composition of mixins, or abstract subclasses. This form of inheritance can also encode a CLOS multiple-inheritance hierarchy, although changes to the encoded hierarchy that would violate encapsulation are difficult. Practical application of mixin-based inheritance is illustrated in a sketch of an extension to Modula-3.},
  journal = {SIGPLAN Not.},
  month = sep,
  pages = {303–311},
  numpages = {9}
}

@Article{gabriel1991clos,
  title={CLOS: Integrating object-oriented and functional programming},
  author={Gabriel, Richard P and White, Jon L and Bobrow, Daniel G},
  journal={Communications of the ACM},
  volume={34},
  number={9},
  pages={29--38},
  year={1991},
  publisher={ACM New York, NY, USA}
}

@Book{amop,
  Title={The {A}rt of the {M}eta-{O}bject {P}rotocol},
  Author={Kiczales, Gregor and Des Rivières, Jim and Bobrow, Daniel Gureasko},
  Year={1991},
  Publisher={MIT press}
}

%@InProceedings{Ungar91organizingprograms,
%  Title = {Organizing Programs Without Classes},
%  author = {David Ungar and Craig Chambers and Bay-Wei Chang and Urs Hölzle},
%  journal = {Lisp and Symbolic Computation},
%  year = {1991},
%  pages = {223--242},
%  publisher = {Kluwer Academic Publishers}
%}

@TechReport{eppl91,
  Author={Matthias Felleisen},
  Title={On the Expressive Power of Programming Languages},
  Institution={Rice University},
  Year={1991},
}
%  Note={\myurl{http://www.cs.rice.edu/CS/PLT/Publications/}}


@PhDThesis{bracha1992jigsaw,
  author = {Gilad Bracha},
  title = {The Programming Language Jigsaw: Mixins, Modularity and Multiple Inheritance},
  school = {University of Utah},
  year = {1992}
}

@Article{dickey1992scheming,
  title={Scheming with objects},
  author={Dickey, Ken},
  %url={http://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/lang/scheme/oop/yasos/swob.txt},
  journal={AI Expert},
  volume={7},
  number={10},
  pages={24--33},
  year={1992}
}

@InProceedings{chambers92objectoriented,
  author = {Craig Chambers},
  title = {Object-oriented multi-methods in Cecil},
  booktitle = {Proceedings of the 6th European Conference on Object-Oriented Programming ({ECOOP})},
  volume = "615",
  publisher = "Springer-Verlag",
  address = "Berlin, Heidelberg, New York, Tokyo",
  editor = "Ole Lehrmann Madsen",
  isbn = "3-540-55668-0",
  pages = "33--56",
  year = "1992",
  %url = "http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.121.134"
}

% https://www.cs.bham.ac.uk/~udr/papers/oosem.pdf
Two Semantic Models of Object-Oriented Languages∗
Samuel N. Kamin
Uday S. Reddy
University of Illinois at Urbana-Champaign
October 4, 1993

@InProceedings{ImplementingTypeClasses,
  title = "Implementing Type Classes",
  author = "John Peterson and Mark Jones",
  booktitle = "Proceedings of the 2000 ACM SIGPLAN Haskell Workshop, volume 41.1 of Electronic Notes in Theoretical Computer Science. Elsevier Science",
  year = "1993",
  pages = {227--236},
  %url = "http://web.cecs.pdx.edu/~mpj/pubs/pldi93.html",
  publisher = {Elsevier Science},
}
% http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.53.3952

@article{Cook1994,
  title={A Denotational Semantics of Inheritance and Its Correctness},
  author={W. Cook and J. Palsberg},
  journal={Information and Computation},
  year={1994},
  volume={114},
  pages={329--350},
  %url = {https://www.cs.utexas.edu/~wcook/papers/ic94/ic94.pdf}
}

@Misc{Barrett96amonotonic,
  author = {Kim Barrett and Bob Cassels and Paul Haahr and David A. Moon and Keith Playford and P. Tucker Withington},
  title = {A Monotonic Superclass Linearization for Dylan},
  year = {1996},
  %url = {https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.19.3910}
}

@Book{Abadi97atheory,
  author = {Martín Abadi and Luca Cardelli},
  title = {A theory of objects},
  year = {1997}
}

@InProceedings{aop97,
  author = {Kiczales, G. and Lamping, J. and Mendhekar, A. and Maeda, C. and Lopes, C. and Loingtier, J. M. and Irwin, J.},
  title = {Aspect-oriented programming},
  booktitle = {11th European Conference on Object-Oriented Programming ({ECOOP})},
  pages = {220--242},
  year = {1997}
}

@InProceedings{conf/tlca/Levy99,
  title = {Call-by-Push-Value: A Subsuming Paradigm.},
  year = {1999},
  author = {Blain Levy, Paul},
  publisher = {Springer},
  booktitle = {Typed Lambda Calculi and Applications, 4th International Conference, TLCA'99, L'Aquila, Italy, April 7-9, 1999, Proceedings}
}

@misc{ecmascript,
  title={ECMAScript Language Specification},
  author={ECMA, Final Draft},
  year={1999}
}

% See notably chapter 32.
@Book{tapl,
  Author = {Pierce, Benjamin C.},
  Title = {Types and Programming Languages},
  Year = {2002},
  ISBN = {0262162091},
  Publisher = {MIT Press},
  Edition = {1st},
}

@InProceedings{Salzman05prototypeswith,
  author = {Lee Salzman and Jonathan Aldrich},
  title = {Prototypes with multiple dispatch: An expressive and dynamic object model},
  booktitle = {ECOOP 2005, Proceedings, LNCS},
  year = {2005}
}

@InProceedings{Flatt06schemewith,
  author = {Matthew Flatt and Robert Bruce Findler and Matthias Felleisen},
  title = {Scheme with classes, mixins, and traits},
  booktitle = {In Asian Symposium on Programming Languages and Systems (APLAS) 2006},
  year = {2006},
  pages = {270--289}
}

@InProceedings{BruceCardelliPierce2006,
    author = {Kim B. Bruce and Luca Cardelli and Benjamin C. Pierce},
    title = {Comparing Object Encodings},
    booktitle = {Journal of Functional Programming},
    volume = {16},
    pages = {375-–414},
    year = {2006},
}
% http://citeseerx.ist.psu.edu/viewdoc/similar?doi=10.1.1.211.6777&type=cc

% NB: Extended version of the seminal 2005 TOPLAS paper.
% For a history of lenses, see Jules Hedges' https://julesh.com/2018/08/16/lenses-for-philosophers/
@article{Foster2007CombinatorsFB,
  title={Combinators for bidirectional tree transformations: A linguistic approach to the view-update problem},
  author={Nate Foster and M. Greenwald and J. T. Moore and B. Pierce and A. Schmitt},
  journal={ACM Trans. Program. Lang. Syst.},
  year={2007},
  volume={29}
}

% Master Thesis
@TechReport{gclviewer2008,
  Author = "Ibrahim Bokharouss",
  Title = "GCL Viewer: a study in improving the understanding of GCL programs",
  Institution = {Eindhoven University of Technology},
  year = 2008,
  url = {https://research.tue.nl/en/studentTheses/gcl-viewer}
  }
% https://pure.tue.nl/ws/portalfiles/portal/46927079/638953-1.pdf

@InProceedings{dolstra2008nixos,
  title={NixOS: A purely functional Linux distribution},
  author={Dolstra, Eelco and L{\"o}h, Andres},
  booktitle={Proceedings of the 13th ACM SIGPLAN international conference on Functional programming},
  pages={367--378},
  year={2008}
}

% April 2
@Misc{minsky08,
  author = {Yaron Minsky},
  title = {The {ML} sweet spot},
  year = 2008,
  %url = {https://blog.janestreet.com/the-ml-sweet-spot/},
  urldate = {2021-03-14}
}

@InProceedings{Brown_functioninheritance:,
  author = {Daniel Brown and William R. Cook},
  title = {Function Inheritance: Monadic Memoization Mixins},
  booktitle = {Brazilian Symposium on Programming Languages},
  year = {2009},
}

% Unpublished
@Misc{MonadsMixins,
  title = "The Different Aspects of Monads and Mixins",
  author = "Oliveira, Bruno C. d. S.",
  year = {2009},
  %url = {http://ropas.snu.ac.kr/%7Ebruno/papers/MixinAspects.pdf},
}

@InProceedings{Oliveira10effectiveadvice,
  author = {Oliveira, Bruno C. d. S. and Schrijvers, Tom and Cook, William R.},
  title = {EffectiveAdvice: disciplined advice with explicit effects},
  booktitle = {AOSD’10: 9th International Conference on Aspect-Oriented Software Development},
  pages = {109--120},
  year = {2010}
}

@InProceedings{LIL2012,
  author = {François-René Rideau},
  title = {{LIL}: {CLOS} ~ Reaches Higher-Order, Sheds Identity and has a Transformative Experience},
  %url = "http://github.com/fare/lil-ilc2012/",
  booktitle = {International Lisp Conference},
  year = 2012
}

@Misc{jsonnet,
  author = {Dave Cunningham},
  title = {Jsonnet},
  year = 2014,
  url = {https://jsonnet.org},
  urldate = {2021-03-11}
}

@book{EcmaScript:15,
  added-at = {2015-08-28T15:36:26.000+0200},
  address = {Geneva},
  author = {{Ecma International}},
  biburl = {https://www.bibsonomy.org/bibtex/28d67e2ebf933f3b6f684fcfb1f53b020/gron},
  edition = {6th},
  interhash = {8212a5bb4b7ac3137534f10d599cb526},
  intrahash = {8d67e2ebf933f3b6f684fcfb1f53b020},
  keywords = {JavaScript spec specification},
  month = {June},
  timestamp = {2015-08-28T15:37:30.000+0200},
  title = {{ECMAScript 2015 Language Specification}},
  %url = {http://www.ecma-international.org/ecma-262/6.0/ECMA-262.pdf},
  year = 2015
}

% This article is great in desugaring the prototype sublanguage of JS,
% but doesn't cover classes.
@article{DBLP:journals/corr/GuhaSK15,
  author    = {Arjun Guha and
               Claudiu Saftoiu and
               Shriram Krishnamurthi},
  title     = {The Essence of JavaScript},
  journal   = {CoRR},
  volume    = {abs/1510.00925},
  year      = {2015},
  %url       = {http://arxiv.org/abs/1510.00925},
  archivePrefix = {arXiv},
  eprint    = {1510.00925},
  timestamp = {Mon, 13 Aug 2018 16:46:22 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/GuhaSK15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{EcmaScript:15,
  added-at = {2015-08-28T15:36:26.000+0200},
  address = {Geneva},
  author = {{Ecma International}},
  biburl = {https://www.bibsonomy.org/bibtex/28d67e2ebf933f3b6f684fcfb1f53b020/gron},
  edition = {6th},
  interhash = {8212a5bb4b7ac3137534f10d599cb526},
  intrahash = {8d67e2ebf933f3b6f684fcfb1f53b020},
  keywords = {JavaScript spec specification},
  month = {June},
  timestamp = {2015-08-28T15:37:30.000+0200},
  title = {{ECMAScript 2015 Language Specification}},
  %url = {http://www.ecma-international.org/ecma-262/6.0/ECMA-262.pdf},
  year = 2015
}

@article{Pickering_2017,
  title={Profunctor Optics: Modular Data Accessors},
  volume={1},
  ISSN={2473-7321},
  %url={http://dx.doi.org/10.22152/programming-journal.org/2017/1/7},
  DOI={10.22152/programming-journal.org/2017/1/7},
  number={2},
  journal={The Art, Science, and Engineering of Programming},
  publisher={Aspect-Oriented Software Association (AOSA)},
  author={Pickering, Matthew and Gibbons, Jeremy and Wu, Nicolas},
  year={2017},
  month={Apr}
}

% Withhold citation until after deanomization
@Misc{GerbilPOOwithheld,
  author = {Author withheld},
  title = {Title withheld},
  url = {https://github.com/repository/withheld},
  year = 2020
}
@Misc{GerbilPOO,
  author = {François-René Rideau},
  title = {Gerbil-POO},
  year = 2020,
  url = {https://github.com/fare/gerbil-poo},
  urldate = {2021-04-06}
}

@Misc{DrWhoFPIT,
  author = {Unknown},
  title = {Fixed Point in Time},
  year = 2021,
  url = {https://tardis.fandom.com/wiki/Fixed_point_in_time},
  urldate = {2021-03-14}
}
% Maybe cite the last episode of this story instead, that explains the concept?
% https://en.wikipedia.org/wiki/Earthshock
% On citing TV series:
% https://www.easybib.com/guides/citation-guides/how-do-i-cite-a/how-to-cite-movie-tv-netflix/

@Misc{wikiC3,
  title = "C3 linearization",
  author = "Wikipedia",
  year = 2021,
  url = {https://en.wikipedia.org/wiki/C3_linearization},
}

%% Further Suggestions to maybe integrate in the paper:

% http://okmij.org/ftp/Computation/Subtyping/

% Barak Pearlmutter & Kevin Lang's Oaklisp https://github.com/barak/oaklisp

% Look at papers that cite Bracha 1990 on Semantic Scholar, including:
% https://www.semanticscholar.org/paper/Classes-and-mixins-Flatt-Krishnamurthi/c20e5f2a424b96209e6b400b23d319558932afa3
% https://www.semanticscholar.org/paper/Function-Inheritance-%3A-Monadic-Memoization-Mixins-Brown-Cook/d2bf5dc5c6c6bff91d10a0e2dceaaa13c2064765
% https://www.semanticscholar.org/paper/Object-Inheritance-Without-Classes-Jones-Homer/3dbc00e08dd1fa7c29faae9b2da544fb7e8d5579

% Modularity: ch4 and ch9 of taoup, e.g. http://www.catb.org/~esr/writings/taoup/html/ch04s02.html#orthogonality

% Semantics and Types for Objects with First-Class Member Names
% Joe Gibbs Politz, Arjun Guha, Shriram Krishnamurthi
% Foundations of Object-Oriented Languages, 2012
% https://cs.brown.edu/~sk/Publications/Papers/Published/pgk-sem-type-fc-member-name/


% Erik Ernst's work on gBeta:
% https://www.researchgate.net/publication/2806012_gbeta_-_a_Language_with_Virtual_Attributes_Block_Structure_and_Propagating_Dynamic_Inheritance

% Design Rules: The Power of Modularity,  by Baldwin & Clark

% Dart Book, by Gilad Bracha, Section 2.15 on mixins + examples all around, 5.9 on modularity

% StrongTalk.org still runs on Windows 10.

% William R. Cook: On Understanding Data Abstraction, Revisited

% CUE rejects inheritance, instead has value/pattern unification along a lattice: https://cuelang.org/docs/concepts/logic/

% https://www.piumarta.com/software/id-objmodel/objmodel2.pdf
% OOPSLA07
